{"version":3,"sources":["node_modules/intersection-observer/intersection-observer.js","js/lazy-load/backgrounds.js","js/lazy-load/images.js","js/lazy-load/index.js","js/side-nav.js","js/product-slider.js","js/add-to-cart.js","js/side-cart.js","js/app.js","node_modules/parcel/src/builtins/bundle-url.js","node_modules/parcel/src/builtins/css-loader.js"],"names":["require","config","root","rootMargin","threshold","setBackgroundImages","backgrounds","document","querySelectorAll","observer","IntersectionObserver","element","forEach","backgroundElement","intersectionRatio","img","Image","src","target","getAttribute","onload","style","backgroundImage","closest","classList","add","setAttribute","image","observe","observerOptions","setDomElement","ratio","alt","wrapperEl","createElement","parentEl","parentElement","innerHTML","paddingBottom","height","width","appendChild","getImageRatio","allDomImages","imgElement","offsetHeight","setDem","setInterval","imageRatio","offsetWidth","clearInterval","initDomImages","domImages","domImage","all_images","article","querySelector","console","log","length","window","allImages","opacity","maxWidth","menuTrigger","closeTrigger","body","getElementsByTagName","navShowing","toggleSideNav","contains","setTimeout","remove","addEventListener","event","product_slider","$","each","$index","$slide","$this","flickity","cellAlign","wrapAround","cellSelector","add_to_cart","current_qty","update_cart","btn","cart_button","close_side_cart","getElementById","side_nav_showing","init_side_cart","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","updateLink","link","newLink","cloneNode","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","i","module"],"mappings":"AAAA,ASAA,ACAA,IDAI8F,ACAAY,MAAM,GDAG,ACAA1G,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AVCA;AQDA,ALAA,AHEA,ASDA,ACCA,SDDS+F,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;ATE9B,ASDE,ACCA,MDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;AFFF,ALAA,AHGA,ASDIhB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;ATEJ,ASDG,ACADa,EAAAA,OAAO,CAACzF,MAAR,GAAiB,YAAY;AFF/B,ALAA,AHIA,AUDIwF,IPHEtD,AOGFsD,IAAI,CAACpC,KPHO,COGZ,EPHejE,QAAQ,CAACC,gBAAT,CAA0B,KAA1B,CAAnB;AGFe,ALAfR,ACAAA,ACGA,AEHe,AEAA,AHAA,AJOf,ASDE,ACAC,GAFD,CPDIuD,GFHC,ACAA,CDAC,ACAA,COMCuC,ENHI,GAAGvF,IMGd,EHNwB,ADAA,AEAA,AHAA,EDGF,CAACiD,QFHlB,ACAA,CDAP,ACAA,ICGgB,CAAuB,UAAvB,CAAhB;AGFE,AEEF,AHFE,AEAA,AHAA,AJOF,ASDC,MHNO6B,ADAAV,AEAAc,AHAAzB,WEAW,ACAA,AHAA,GEAGzD,ADAA,AEAAA,AHAAA,GCAGqE,CAAC,CAAC,GCAG,ACAA,AHAA,CEACpE,ACAAgD,AHAAA,aGAT,AHAA,CGAuB,AHAA,EEAvB,CAA0B,EDAtB,CAAxB,QDAoB,CAApB,EEAoB,ACAA,CDApB,ACAA;ADCA,ALAF,ACAA,ACGA,AEDEmB,AEFA,AHAA,AJOF,AUFEkC,ELHAlC,AKGAkC,ETLI5G,ACAA4B,ACGH0B,EGHG+B,ACAEI,AHAAzB,GMKC,CTLG,ASKF8C,CPFV,EFHgB,AEGJ,COEV,ELHc,CCFC,ADEAlC,AKGA+B,CNLG,CFAC,CIAD,CAAC,ADEnB,AEFqB,AHAArG,AMKF,CJLnB,AJAsB,AGEF,AKGAwG,EHLIxG,EGKT,CAAUyG,ENLI,CAACxD,ECETsB,AEFW,AGKjB,CHLkBa,AGKF,GAAhB,ELHK,AKGgB,CAArB,CLHcZ,GDFR,AMKoB,CNLG,ECExB,AKGL,CHLS,CFEgB,AEFQ,CGKDkC,IAAI,CAACC,GAAL,EAA/C,ENLqB,CAArB,QGAwB,CAAxB;ACEF,APDEhH,ACAAA,ACGAuD,AEDE,AEFF,AHAA,AJOF,ASDA,ACDEmD,ETLA1G,ACAAA,ACGAuD,AOEAmD,ITLI,ACAA,AKAE1C,AHAAA,AMKF,CAACiD,CTLC,ACAA,AGEAnC,CFCC,AMGAgB,CNHCtC,AIHE,AHAA,EHDI,ACAQ,CCItB,AEDW,AEFEnD,AHAAA,CDGD,EEDEqE,CAAC,AKGf,CLHgBG,AKGAqC,GHLK,AHAA,AKMvB,CFNwBjD,AHAAA,ECEP,AIIO,CJJpB,KKGF,CAA6B0C,KPF7B,EOEA,EAAsCD,EHLzB,AHAA,CGA8B,AHAA,CMKD,CAACS,IHL9B,AHAA,EGAsC,AHAA,CGAtC,AHAA,CGAb,AHAA,GMKA;AJHA,ALDAlH,ACAAA,ACGD,AEDG6E,AEFF,AHAA,AJOF,ASDE,ACDD,CPJD,CFDE7E,ACAAA,EGEE6E,ECDIO,ACDFK,AHAAxB,CDGA,EEDG,CAACa,EJFE,ACAA,EDAE,ACAA,EEAE,CECG,CDCf,CJJY,ACAQ,AGIL,ADFA,CECG,ECDA,EHApB,CGAuB,IDCjBM,CCDN,UDCoB,CAACb,KAAD,EAAW;AAC7BjB,AEDJ,APAErD,ACAAA,ACGA,AEDI8E,ALKN,ASDE,ERNA9E,ACAAA,EICEqD,EDCEyB,AIIA,KHLK,ALDA,ACAA,CICCxB,CLDC,ACAA,EICT,ADCW,CCDC,CDCC,MADE,MFEHJ,CGFZ,SHEF;AFNc,ACAQ,ACOvB,AEDK6B,AEFJ,AHAA,AJOF,ASDI,ACDJ,CTTA,ACAA,GQSImC,ELHEnC,AEFEU,AHAAxB,IKME,IAAI4B,ACDA,ELHE,CKGC,CLHC,CDFG,AKMX,CFNY,CEMlB,ACDJ,CLLmB,ADAK,CGAC,QHAjB5B,CGAAwB,YHAgB,EGAC,CHAK,EGAC;ADC3B,ADEET,AEFF,AHAA3B,AJOJ,ASDG,GAFD,CLJEA,AKMA,EJJE2B,ECFCE,ACAA,CAACpB,EHAG,AKMAgC,CLNCxC,CGAA,CAAClC,AEMT,CLNA,CAAY,AKMA,EJJE,CCFA,CDEE,GEFZ,CDAe,ACAA8C,AHAnB,CEAoB,CAApB,EAAuB,ICAnB,CAAwB,mBAAxB,CAAJ,EAAkD;ADChD/D,ALAN,ACAA,ACEA,AEJmB,AEEb2D,APON,ASDI,ACFJ,ITJM7D,ACAAyB,ACEHwB,CEJC,CCEE/C,ACAA2D,EEMEiC,CCFCoB,CHJC,CAAC/F,GDAG,AHED,CGFEgC,AHEDG,AMIC,EPNI,COMD,ACFlB,CDEmB,CPNG,AKAhB,CJEN,AIFqBlC,AGIA,ETJI,AEEH,CIFhB,AEMkByE,CFNC,CNAG,CQMD,CHNrB,AGMsBE,CHNC,AJAvBtE,IOMY,ERNZzB,AQM6BgG,KAAjB,CAAuB,CPNnB,CAAC1F,CKAjB,IDAA,EAA4C0B,AJA5B,EAAUN,EDAJ,GAAM,ACAZ,EIAhB,AJAiCd,GAAjB,EAAsBe,GAAtB,EAA8B,mCOMlC,CAAd;AHCC,AETL,APGE,ACAArB,ACGAiD,AEDC,AEFGW,AHDF,AJQJ,AUHE,ERJA5D,ACGAiD,CERA,GJKItD,AMAAiE,AGIA+C,EPDE,ACJD,CFCE,ACGAlG,ACJD8C,CFCExC,GEDE,CAACF,CDIX,CIHc,AGId,CTJe,AMAA,CJGC,AOCA,ETJEjB,ECAlB,CAAqB,AEDf,CAAe+D,IHCK,ACA1B,CDA2B9D,CCAC,ACGN,EDHtB,AEDM,CAAwB,YHCZ,CAA0B,AGDtC,CAAJ,EAA4C,cHC5B,CAAlB;AOFF,APGE,ACAA,ACGE,AEAH,AEJgB,AHAX0D,AJQN,ASFI,ACDA,MTJEzD,ACAEwB,AEDFiC,EDIEL,AMEAsC,ELNE,CAAC3E,GHCG,CCAG,AKDMoE,AEMnB,ERLa,AEGA,AMEA,CPLGrF,ECGAA,ACJd,CHCeG,AGDAe,GAAf,CAAmB,CFCG,CAACS,CCGD,CAAC1B,EIJU,GAAG,IAAzB,AHAX,EFCc,CDAH,ACA0B,CDAD,GEGtB,CDHA,ACG0B,CDH5C,ICGkB,CFHuBG,AEGvC,OFHsC,EAAa;AKOnD2E,AETJ,APII3E,ACDF,AKFe,AHCX4D,AJQN,ASFM,ACDH,IJECe,ALLA3E,ECDIwB,AEDFoC,CGDU,CAAV,GNGK,CAAC3D,CQIC0F,CPLG,CIMD,CFPC,CFCG3F,AEDF,CEOC2E,CLLd,CAAgB,GQIG,CPLG,AOKFa,CPLG/D,IIME,AFPN,CHEHvB,CQIW,CHCC,AGDA,CHC5B,AGD2B,CAAR,CAAjB,GPLJ,SDCmC,EAAI;AKMrC4C,AETJG,APKM,ACDJ3B,ACCE,AIJC,AHCGmC,AJQR,ASFK,EPJHnC,EIKEwB,CCXA,CCEE,CAACgB,CLKAlB,ACHCa,EHGCvD,CKIE,AJLA,AKHA,CDQC6C,AJLAhC,GIKR,AHJA,CGIY4D,CHJA,CCHE,GAAG,EIFrB,CAAwB,ANItB,CAAuB,AEFjB,EEOJ,ALJsB,CAACxE,EOL3B,EAAgC,ANI9B,EAAgC,UAAhC,CDCO,GAAsC,CAAzC,EAA4C;AKM9CP,AEX4B,APOxB,ACFN0B,ACCI4B,AIJAK,AHCC,AJQP,ASFG,ACDDoD,ERHArF,AQGAqF,EJGE/G,EHLEsD,AIJAK,CHDU,CAAV,CIDgC,CDE5B,CLGC,AKHA1C,CDSC,ALJET,ACFFW,AQGA,CJGC8B,ELJI,AEDF,AOEAe,CPFC3D,EFCI,EMLd,CAAe4D,CNKGxD,CEDlB,CDDJ,ACCsB,CDApB,AQEqB,CJGrB,AIHsB,CJGC,ALJP,AMLd,CAAsB,CNKpB,GCFN,EAEE,ACDqBD,GAAD,CKNQ,AEQM,CPFJ,QIJ5B,CDSF,EAA8CsB,SAA9C,GAA0DiD,WAAW,GAAG,CAAxE,CAf6B,CAgB7B,EJPF;AIQE,AEb4B,APQxBvE,ACCNkB,ACFMlB,AIJF6E,AHCD,AJQL,AUHI,CFTJ,CNSE3D,GEVE,CGIE2D,ENKE7E,AEDAA,AOEAyG,GTDG,ACCA,ACFA,ACHA,CHICvG,ACCAoB,ACFAhB,COEC,ETDL,CSCQd,CPFR,CFCUM,AEDAiD,GDEhB,CKNoB,EGME,CPFhB,AIJiB,AGMAtD,GPFG,CAApB,CIJF,KNK6B,CAACU,KSCpB,CTDE,ASCwB,CTDCC,YAAzB,CAAsC,SAAtC,CAAV,ASCQ,CAAZ,URAgEF,GAAlE,oBAA+Ee,GAA/E;AIKC,AEbHyB,ANSExB,ACFMlB,AIJH,AHCCmD,AJQN,ASFE,EPDAjC,CIdA,GFSIiC,CIJC,CAACR,ALOA3C,CMGC,CLNC,CIJV,ANSW,ACFA,ACHAS,CIJC,ANSAH,ACFAA,AMGV,KPDA,ACFM,CDEUiB,ACFAE,ECHZ,CAAegC,EDGb,GKPR,ALO0B,CCHpB,CAAsB,GFK1B,CCFM,EDE2BzC,KAAK,CAACQ,CELnC,KFK6B,GAAeR,KAAK,CAACS,KAAtB,GAA+B,GAA/B,GAAqC,GAArE;ADAMzB,ACENoB,ACHMpB,AIJL,AHCGqD,AJQN,ASFC,ACFG,EREFjC,CKfA,GHSIiC,EHIErD,AEDAA,COCC,CREC,CDFC,ACEAsB,ACHA,CFCCjB,AEDAC,COCCoG,CAAC,ENJE,CDGR,AOCS,CTAT,AEDU1D,AOCd,CNJe,CFMjB,AQFkB0D,CTAC,ASAA,EREE,CENjB,AMIkBD,CREtB,CCHM,GAAqB,AOCA,CAAC7D,GTAH,EEDnB,COCJ,EAAkC8D,CAAC,EAAnC,EAAuC;AJMzCpC,ALLQxE,ACERsB,ACHK,ACHF,AJQL,AUJM,EJKJkD,AJHAlD,KCPI,GFKItB,ACEA,AQFA6F,CRECjE,EIGE,CAAC7B,EILE,CAAC0F,IJKf,CAAoB,AJHpB,CAAqBrE,IDFI,ASAjB,CTAkBf,ASAAsG,IJKLhC,AJHrB,CQF+B,CTAvB,ASAwBiC,CJKZ,ALLapG,ASAF,CAAL,CJKG,AILM0F,GTA3B,CAA+BzF,ASA/B,MAAqCoF,MAAM,CAACV,ETA5C,GAAiD,OSAZ,ETAoBjF,ASA7D,EAAgE,CTAA,CAACE,GAAZ,GAAiB,GAAlE;AKMNuE,ALLM3E,ACGRN,ACJG,AIFHmF,AHDC,AJQH,ASFA,ACFQiB,ERGNpG,AKNAmF,CHZA,CEoBEF,CHZA,EGYG,CAACf,AILAkC,CDECL,CRFCzF,ACGA,CAACL,ACJA,MIFM,CAACiE,AGGA,CDElB,ACFmB+C,CDECjB,GAApB,CHGI,AILoB,CJKC,AGHA,ACFAkB,CAAD,CTAG,ACGzB,AQHgB,CTAUvG,ACGA,AQHpB,IJKJ,EAA8B,ALLxB,AMHR,CNGiCK,AMHA,MLMjC,CDHQ,AMHR,CNGyC,ACGAX,CIET8D,ACRSmB,KDQJ,CJFrC,CAAiD,KDHzC,EAAgDrE,AMHxD,GLMkDG,KAAD,CDHzC,CAA0DF,ACGN,GDHpD,CAA8D,QAA9D;AKK6B,ALJ7BZ,ACGNc,ACJE,AIFJ8D,APOF,ASFE,ACFK,EHHLA,ELME9D,KAAK,AODA,CRFCd,ACGAa,AODA,GHEiC6D,ACP9B,CAACd,CEKC8B,GAAN,EAAWC,EPChB,CACE,CIAgD,CAAC9B,ELJ5B,AQElB,CRFmBxD,AQEA,EHE0B,AJDlD,AKNF,CDOqC,ACPR,CLQzB,CCNc2C,CFCV,CAAyBnC,GMHjC,EAAsCmE,EJElC,KFCI,CAAsC,MMH9C,GNGQ,EAAiD,EAAjD,oCCGN,CODK,EAA2F,IAA3F,IAAmG,GAA1G;AHEqC,ALH9B,ACMN,ACPE,AIDHjC,AHAAK,AJMF,ASFC,ACFI,EHFHL,AHAAK,CFGA,EIEE,GCLI,CNFA,AMECQ,KHAK,CAACA,UGAb,CAAwB,KHAxB,CAA8B,CGA9B,EAAiC,IHAjC,EAAuCJ,IGAGK,KAAT,EAAgB,EHAjD;AEMC,ALHI,ACMN,AKRG,AHAFV,AJMF,CEpBA,CEcEA,CEGA,KCHK4B,KHAM,CAACnB,UGAS,IAAIP,EHAzB,CAA6B,CGAA,CAAC1C,KHA9B,EAAsC6C,EGAb,CAAeC,QAAf,CAAwB,CHAjD,kBGAyB,CAAvB,EAAqE;ADMxE,ALHI,AEDD,AIDEb,AHEFG,AJIJ,ASFA6C,ACFIa,ENAA1D,EMAA0D,CTbA,CMWE7D,CEIC,CLFG,AKEFuC,CLFGvB,IGFE,CAACf,AGEA,GHFR,AGEW,CHFC,EEIlB,CCFI,EDEmBqC,ELFnB,CAAwB,EGFtB,EAAwBH,GHE1B,EAAiC,MKErC,ILF8ClB,CGFxC,IHE+B,EAAgB;AHClD,ACMH,ACPG,ACCG,AJIN,ASFA+B,ACFG,GThBc,AEEf,AOKuB,CRenB/D,CDNDzC,ASAA,EDEE,ACXkB,CNShBmE,AKEDkC,ACXN,GTPe,CAAf,KCsBiB,CENA,AKEnB,EPIsB,COJDA,CLFEpC,IAAI,CAAC1C,EFMtBkB,EOJN,KLFuB,CAAe4B,KFMhB,CAAC3B,EENA,CAAwB,SFMzB,EAAkB,EENjB,CAAjB,EAAyD;AHE7DrC,ACKA,ACPD,AIFK,AHGE,AJIR,AUJC,ETCCA,ICKIsC,IKTG,AHGE,CGHD8B,AHGEA,EHCC,CAAC9D,ECKE,AKTD,AHGE,CGHDM,AHGEA,EFMCyB,EDLjB,CAAoB,CMJZ,AHGE,CGHWpB,AHGEA,OFMvB,AKTQ,AHGE,CHCUI,AMJS,AHGE,KHCN,EAAI,IGDnB,CGHF,AHGF,CGHF,CHGyC,CGHD;ANK1ClB,ACMFmC,AKVMa,AHGES,AJIV,EEGEtB,EDNEnC,IMJIgD,AHGES,IHCE,ACMA,AEPE,CHCDtC,ACMAhB,AEPEY,EGHA,CAACkC,GAAR,CNIJ,ACMF,AKVkB,CNIC/B,ACMA,CEPX,CAAe6C,GHCrB,GGDM,CGHF,AHGwB,CFOV7D,OAAD,EAAa,GEPxB;AHEP,ACMC,AKVIuD,AHGEE,AJIV,AUJAsD,GTDE,GSCI,CAACjB,CROGxF,AKVFiD,AHGEE,GFOG,CKVD,CAAC5C,CLUGb,AQPhB,GAAiB4G,CNAG,GFOG,AEPA,CFOCpG,AKVhB,CAAeqD,GHGb,AMAV,GHHQ,CAAsB,ILUd,CAAqB,KAArB,CAAZ,QKVI;ANKP,ACMG,AKVIoB,AHGC,AJIT,CC1BA,OC6BU5D,AKVF4D,GLUK,GAAGjF,OAAO,CAACQ,EKVA,GAAG,KAAnB,ELUQ,CAAqB,KAArB,CAAZ;AKTG,AHGA,AJIP;AEII,AKVC,AHGA,AJIL,GIXI,KFcIR,OAAO,CAACkC,YAAR,IAAwB,CAA5B,EAA+B;AAC7B,AKVH,AHGF,AJID,GOhBE,OLmBQC,MAAM,GAAGC,WAAW,CAAC,YAAM;AAC7B,AKTP,APMD,YEGYpC,OAAO,CAACkC,YAAR,GAAuB,CAA3B,EAA8B;AAC5B,AFHV,cEGgBG,UAAU,GAAG;AACjBT,AFHZ,YEGYA,MAAM,EAAE5B,OAAO,CAACkC,YADC;AAEjBL,AFHZ,YEGYA,KAAK,EAAE7B,OAAO,CAACsC;AAFE,AFA7B,WEAU;AAIAnB,AFHV,UEGUA,aAAa,CAACnB,OAAD,EAAUqC,UAAV,EAAsB/B,GAAtB,EAA2Be,GAA3B,CAAb;AACAkB,AFHV,UEGUA,aAAa,CAACJ,MAAD,CAAb;AACD,AFHT;AEIO,AFHP,OEN8B,CAAxB;AAUD,AFHL,KERI,MAWO;AACL,AFHN,UEGYE,UAAU,GAAG;AACjBT,AFHR,QEGQA,MAAM,EAAE5B,OAAO,CAACkC,YADC;AAEjBL,AFHR,QEGQA,KAAK,EAAE7B,OAAO,CAACsC;AAFE,AFAzB,OEAM;AAIAnB,AFHN,MEGMA,aAAa,CAACnB,OAAD,EAAUqC,UAAV,EAAsB/B,GAAtB,EAA2Be,GAA3B,CAAb;AACD,AFHL;AEIG,AFHH,GEnBE;AAuBD,AFHD,CEvBA;AFwBA;AACA;AACA;AEEA,AFDA,IECMmB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AACnC,AFDF,MECM3C,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAACC,OAAD,EAAa;AAEnDA,AFFJ,IEEIA,OAAO,CAACC,OAAR,CAAgB,UAACyC,QAAD,EAAc;AAC5B,AFFN,UEEUA,QAAQ,CAACvC,iBAAT,GAA6B,CAAjC,EAAoC;AAClC,AFFR,YEEWuC,QAAQ,CAACnC,MAAT,CAAgBC,YAAhB,CAA6B,UAA7B,CAAH,EAA6C;AAC3C,AFFV,cEEgBJ,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,AFFV,UEEUA,GAAG,CAACE,GAAJ,GAAUoC,QAAQ,CAACnC,MAAT,CAAgBC,YAAhB,CAA6B,UAA7B,CAAV;AFDV;AEEUJ,AFDV,UECUA,GAAG,CAACK,MAAJ,GAAa,YAAM;AACjBiC,AFDZ,YECYA,QAAQ,CAACnC,MAAT,CAAgBQ,YAAhB,CAA6B,KAA7B,EAAoCX,GAAG,CAACE,GAAxC;AACAoC,AFDZ,YECYA,QAAQ,CAACnC,MAAT,CAAgBM,SAAhB,CAA0BC,GAA1B,CAA8B,QAA9B;AACD,AFDX,WEFU;AAID,AFDT;AEEO,AFDP;AEEK,AFDL,KEVI;AAYD,AFDH,GEbiB,EAcZI,eAdY,CAAf;AAiBAuB,AFHF,EEGEA,SAAS,CAACxC,OAAV,CAAkB,UAACe,KAAD,EAAW;AAC3BlB,AFHJ,IEGIA,QAAQ,CAACmB,OAAT,CAAiBD,KAAjB;AACD,AFHH,GECE;AAGD,AFHD,CElBA;AFmfile":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","require('intersection-observer');\n\nconst config  = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0.3\n};\n\nconst setBackgroundImages = () => {\n  let backgrounds = document.querySelectorAll('.section-bg__el')\n  let observer = new IntersectionObserver((element) => {\n    \n    element.forEach(backgroundElement => {\n\n      if(backgroundElement.intersectionRatio > 0) {\n        \n        const img = new Image();\n        img.src = backgroundElement.target.getAttribute('data-bg');\n\n        img.onload = () => {\n          backgroundElement.target.style.backgroundImage = 'url('+ img.src +')'\n          backgroundElement.target.closest('.section-bg').classList.add('active')\n          backgroundElement.target.setAttribute('data-bg', '')\n        }\n      }\n    })\n  }, config)\n  \n  backgrounds.forEach(image => {\n    observer.observe(image)\n  })\n}\n\nexport { setBackgroundImages };","require('intersection-observer');\n\nconst observerOptions = {\n  root: null,\n  rootMargin: \"0px\",\n  threshold: 0.5,\n};\n\nconst setDomElement = (element, ratio, src, alt) => {\n  element.setAttribute(\"src\", \"\");\n  const wrapperEl = document.createElement(\"div\");\n  const parentEl = element.parentElement;\n\n  wrapperEl.setAttribute(\"class\", \"image-el\");\n  wrapperEl.setAttribute(\n    \"style\",\n    \"position: relative; width: auto; height: 0px;\"\n  );\n  wrapperEl.innerHTML = `<img class=\"lazy-image\" src='' data-src='${src}' alt='${alt}'>`;\n  wrapperEl.style.paddingBottom = (ratio.height / ratio.width) * 100 + \"%\";\n\n  parentEl.innerHTML = \"\";\n  parentEl.appendChild(wrapperEl);\n\n  document.querySelectorAll(\".lazy-image\").forEach((image) => {\n    image.setAttribute(\n      \"style\",\n      \"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"\n    );\n  });\n};\n\nconst getImageRatio = (allDomImages) => {\n  let imgElement = allDomImages;\n\n  imgElement.forEach((element) => {\n    const src = element.getAttribute(\"src\");\n    const alt = element.getAttribute(\"alt\");\n\n    if (element.offsetHeight <= 0) {\n      let setDem = setInterval(() => {\n        if (element.offsetHeight > 0) {\n          const imageRatio = {\n            height: element.offsetHeight,\n            width: element.offsetWidth,\n          };\n          setDomElement(element, imageRatio, src, alt);\n          clearInterval(setDem);\n        }\n      });\n    } else {\n      const imageRatio = {\n        height: element.offsetHeight,\n        width: element.offsetWidth,\n      };\n      setDomElement(element, imageRatio, src, alt);\n    }\n  });\n};\n\nconst initDomImages = (domImages) => {\n  let observer = new IntersectionObserver((element) => {\n\n    element.forEach((domImage) => {\n      if (domImage.intersectionRatio > 0) {\n        if(domImage.target.getAttribute('data-src')) {\n          const img = new Image();\n          img.src = domImage.target.getAttribute(\"data-src\");\n          img.onload = () => {\n            domImage.target.setAttribute(\"src\", img.src);\n            domImage.target.classList.add(\"loaded\");\n          };\n        }\n      }\n    });\n  }, observerOptions);\n\n\n  domImages.forEach((image) => {\n    observer.observe(image);\n  });\n};\n\nexport { getImageRatio, initDomImages };\n","import { setBackgroundImages } from \"./backgrounds\";\nimport { getImageRatio , initDomImages } from \"./images\";\nconst all_images = document.querySelectorAll('img');\nconst article = document.querySelector('.article');\n\nif(article) {\n  console.log('didnt init lazy load')\n}else {\n  getImageRatio(all_images);\n}\nif(all_images.length) {\n  \n  window.onload = () => {\n    let allImages = document.querySelectorAll('img');\n    if(article) {\n      allImages.forEach((img) =>  {\n        img.style.opacity = 1\n        img.style.width = 'auto'\n        img.style.maxWidth = '100%'\n      })\n    } else {\n      initDomImages(allImages)\n    }\n\n    setBackgroundImages();\n  };\n}\n","export default function() {\n  const menuTrigger = document.querySelector('.menu-burger');\n  const closeTrigger = document.querySelector('.close-side-nav')\n  const body = document.getElementsByTagName('body')[0];\n  let navShowing = false;\n\n  const toggleSideNav = () => {\n    console.log('toggle')\n    if(!body.classList.contains('nav-showing')) {\n      body.classList.add('nav-showing')\n      setTimeout(() => {\n        navShowing = true\n      })\n    } else {\n      body.classList.remove('nav-showing')\n      navShowing = false;\n    }    \n  }\n\n  \n  \n  closeTrigger.addEventListener('click', toggleSideNav)\n  menuTrigger.addEventListener('click', toggleSideNav)\n  \n  \n    window.addEventListener('click', function(event) {\n      if(navShowing && body.classList.contains('nav-showing')) {\n        if(!event.target.closest('.side-nav')) {\n          body.classList.remove('nav-showing')\n          navShowing = false\n        }\n      }\n    })  \n}\n","export default function() {\n  const product_slider = $('.product-group__slide');\n\n\n  product_slider.each(($index, $slide) => {\n    let $this = $($slide)\n    $this.flickity({\n      cellAlign: 'left',\n      wrapAround: true,\n      cellSelector: '.product-group__item'\n    }) \n  })\n  \n}","export default function() {\n  const add_to_cart = document.querySelectorAll('.add-to-cart');\n  let current_qty = -1;\n\n\n  const update_cart = (event) => {\n    console.log('updated cart')\n    if(current_qty === -1) {\n      document.querySelector('.product__counter').innerHTML =`\n        <span class=\"product-count\">\n          <span class=\"product-count__num\">\n            \n          </span>\n        </span>\n      `\n    }\n\n    current_qty = current_qty + 1;\n    console.log(current_qty)\n\n    document.querySelector('.product-count__num').innerHTML = current_qty + 1\n    // let new_qty = document.querySelector('.product-count__num').innerHTML;\n    // document.querySelector('.product-count__num').innerHTML = new_qty.JSON.parse(current_qty) + 1;\n  }\n\n  add_to_cart.forEach((btn) => {\n    btn.addEventListener('click', event => update_cart(event))\n  })\n}","export default function() {\n  const cart_button = document.querySelector('.ka-cart button');\n  const close_side_cart = document.getElementById('close-side-cart__btn');\n  const body = document.getElementsByTagName('body')[0];\n  let side_nav_showing = false;\n\n  const init_side_cart = () => {\n    if(!body.classList.contains('showing-side-cart')) {\n      body.classList.add('showing-side-cart')\n      setTimeout(() => side_nav_showing = true)\n    } else {\n      body.classList.remove('showing-side-cart')\n      side_nav_showing = false;\n    }\n  }\n\n  \n\n  close_side_cart.addEventListener('click',init_side_cart)\n  cart_button.addEventListener('click', init_side_cart)\n\n  window.addEventListener('click', function(event) {\n    if(side_nav_showing && body.classList.contains('showing-side-cart')) {\n      console.log('clickity', side_nav_showing)\n      if(!event.target.closest('.side-cart')) {\n        console.log('accepted')\n        body.classList.remove('showing-side-cart')\n        side_nav_showing = false\n      }\n    }\n  })\n\n}","import '../styles/style.scss';\nimport lazyLoad from \"./lazy-load/index\";\nimport sidenav from './side-nav'\nimport product_slider from './product-slider'\nimport addToCart from './add-to-cart';\nimport sideCart from './side-cart';\nsideCart()\naddToCart()\nsidenav();\nwindow.addEventListener('load', () => product_slider())\nconsole.log('js initatied')\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}